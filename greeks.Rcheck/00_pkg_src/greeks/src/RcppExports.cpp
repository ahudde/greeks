// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// calc_I_1
NumericVector calc_I_1(NumericMatrix X, int steps, float dt);
RcppExport SEXP _greeks_calc_I_1(SEXP XSEXP, SEXP stepsSEXP, SEXP dtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< float >::type dt(dtSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_I_1(X, steps, dt));
    return rcpp_result_gen;
END_RCPP
}
// calc_I_2
NumericVector calc_I_2(NumericMatrix X, int steps, float dt);
RcppExport SEXP _greeks_calc_I_2(SEXP XSEXP, SEXP stepsSEXP, SEXP dtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< float >::type dt(dtSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_I_2(X, steps, dt));
    return rcpp_result_gen;
END_RCPP
}
// calc_I_3
NumericVector calc_I_3(NumericMatrix X, int steps, float dt);
RcppExport SEXP _greeks_calc_I_3(SEXP XSEXP, SEXP stepsSEXP, SEXP dtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< float >::type dt(dtSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_I_3(X, steps, dt));
    return rcpp_result_gen;
END_RCPP
}
// calc_X
NumericVector calc_X(NumericMatrix W, int steps, int paths, float dt, float initial_price, float volatility, float r);
RcppExport SEXP _greeks_calc_X(SEXP WSEXP, SEXP stepsSEXP, SEXP pathsSEXP, SEXP dtSEXP, SEXP initial_priceSEXP, SEXP volatilitySEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< int >::type paths(pathsSEXP);
    Rcpp::traits::input_parameter< float >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< float >::type initial_price(initial_priceSEXP);
    Rcpp::traits::input_parameter< float >::type volatility(volatilitySEXP);
    Rcpp::traits::input_parameter< float >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_X(W, steps, paths, dt, initial_price, volatility, r));
    return rcpp_result_gen;
END_RCPP
}
// calc_tXW
NumericVector calc_tXW(NumericMatrix X, NumericMatrix W, int steps, int paths, float dt);
RcppExport SEXP _greeks_calc_tXW(SEXP XSEXP, SEXP WSEXP, SEXP stepsSEXP, SEXP pathsSEXP, SEXP dtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< int >::type paths(pathsSEXP);
    Rcpp::traits::input_parameter< float >::type dt(dtSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_tXW(X, W, steps, paths, dt));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_greeks_calc_I_1", (DL_FUNC) &_greeks_calc_I_1, 3},
    {"_greeks_calc_I_2", (DL_FUNC) &_greeks_calc_I_2, 3},
    {"_greeks_calc_I_3", (DL_FUNC) &_greeks_calc_I_3, 3},
    {"_greeks_calc_X", (DL_FUNC) &_greeks_calc_X, 7},
    {"_greeks_calc_tXW", (DL_FUNC) &_greeks_calc_tXW, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_greeks(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
